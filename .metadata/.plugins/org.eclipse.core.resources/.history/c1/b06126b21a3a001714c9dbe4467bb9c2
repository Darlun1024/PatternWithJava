package eventbus;

import java.lang.reflect.Method;

public class EventBus {
	private static EventBus eventBus;
	public static EventBus getInstance(){
		if(eventBus==null)
			eventBus = new EventBus();
		return eventBus;
	}
	
	public void regist(Object obj){
		String className = obj.getClass().toString();
		
	}
	
	public static void process(String clazz) {
		Class targetClass = null;

		try {
			targetClass = Class.forName(clazz);
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}

		for (Method m : targetClass.getMethods()) {
			if (m.isAnnotationPresent(SubScribe.class)) {
				Class<?>[] paramType = m.getParameterTypes();
				if(paramType.length<1)return;
				System.out.println("被SubScribe注解修饰的方法名：" + m.getName());
			} else {
				System.out.println("没被SubScribe注解修饰的方法名：" + m.getName());
			}
		}
	}
	
}
